#lang sicp

; (define (double f)
;   (lambda (x)
;     (f (f x))))

(define double
  (lambda (f)
    (lambda (x)
      (f (f x)))))

; Evaluation steps:

; (((double (double double)) inc) 5)

; (((double (double double)) (lambda (x) (+ x 1))) 5)

; (((double (double (lambda (f)
;                     (lambda (x)
;                       (f (f x)))))) (lambda (x) (+ x 1))) 5)

; (((double
;    ((lambda (f)
;       (lambda (y)
;         (f (f y))))
;     (lambda (f)
;       (lambda (x)
;         (f (f x))))))
;   (lambda (x) (+ x 1)))
;  5)

; (((double
;    (lambda (y)
;      ((lambda (f)
;         (lambda (x)
;           (f (f x))))
;       ((lambda (f)
;          (lambda (x)
;            (f (f x))))
;        y))))
;   (lambda (x) (+ x 1)))
;  5)

; ((((lambda (g)
;      (lambda (x)
;        (g (g x))))
;    (lambda (y)
;      ((lambda (f)
;         (lambda (x)
;           (f (f x))))
;       ((lambda (f)
;          (lambda (x)
;            (f (f x))))
;        y))))
;   (lambda (x) (+ x 1)))
;  5)

; (((lambda (z)
;     ((lambda (y)
;        ((lambda (f)
;           (lambda (x)
;             (f (f x))))
;         ((lambda (f)
;            (lambda (x)
;              (f (f x))))
;          y)))
;      ((lambda (y)
;         ((lambda (f)
;            (lambda (x)
;              (f (f x))))
;          ((lambda (f)
;             (lambda (x)
;               (f (f x))))
;           y)))
;       z)))
;   (lambda (x) (+ x 1)))
;  5)

; (((lambda (y)
;     ((lambda (f)
;        (lambda (x)
;          (f (f x))))
;      ((lambda (f)
;         (lambda (x)
;           (f (f x))))
;       y)))
;   ((lambda (y)
;      ((lambda (f)
;         (lambda (x)
;           (f (f x))))
;       ((lambda (f)
;          (lambda (x)
;            (f (f x))))
;        y)))
;    (lambda (x) (+ x 1))))
;  5)

; (((lambda (y)
;     ((lambda (f)
;        (lambda (x)
;          (f (f x))))
;      ((lambda (f)
;         (lambda (x)
;           (f (f x))))
;       y)))
;   ((lambda (f)
;      (lambda (x)
;        (f (f x))))
;    ((lambda (f)
;       (lambda (x)
;         (f (f x))))
;     (lambda (x) (+ x 1)))))
;  5)

; (((lambda (y)
;     ((lambda (f)
;        (lambda (x)
;          (f (f x))))
;      ((lambda (f)
;         (lambda (x)
;           (f (f x))))
;       y)))
;   ((lambda (f)
;      (lambda (x)
;        (f (f x))))
;    (lambda (y)
;      ((lambda (x) (+ x 1))
;       ((lambda (x) (+ x 1)) y)))))
;  5)

; (((lambda (y)
;     ((lambda (f)
;        (lambda (x)
;          (f (f x))))
;      ((lambda (f)
;         (lambda (x)
;           (f (f x))))
;       y)))
;   (lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z))))
;  5)

; (((lambda (f)
;     (lambda (x)
;       (f (f x))))
;   ((lambda (f)
;      (lambda (x)
;        (f (f x))))
;    (lambda (z)
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y)))
;       ((lambda (y)
;          ((lambda (x) (+ x 1))
;           ((lambda (x) (+ x 1)) y))) z))))) 5)

; ((lambda (a)
;    (((lambda (f)
;        (lambda (x)
;          (f (f x))))
;      (lambda (z)
;        ((lambda (y)
;           ((lambda (x) (+ x 1))
;            ((lambda (x) (+ x 1)) y)))
;         ((lambda (y)
;            ((lambda (x) (+ x 1))
;             ((lambda (x) (+ x 1)) y))) z))))
;     (((lambda (f)
;         (lambda (x)
;           (f (f x))))
;       (lambda (z)
;         ((lambda (y)
;            ((lambda (x) (+ x 1))
;             ((lambda (x) (+ x 1)) y)))
;          ((lambda (y)
;             ((lambda (x) (+ x 1))
;              ((lambda (x) (+ x 1)) y))) z)))) a))) 5)

; (((lambda (f)
;     (lambda (x)
;       (f (f x))))
;   (lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z))))
;  (((lambda (f)
;      (lambda (x)
;        (f (f x))))
;    (lambda (z)
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y)))
;       ((lambda (y)
;          ((lambda (x) (+ x 1))
;           ((lambda (x) (+ x 1)) y))) z)))) 5))

; (((lambda (f)
;     (lambda (x)
;       (f (f x))))
;   (lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z))))
;  ((lambda (x)
;     ((lambda (z)
;        ((lambda (y)
;           ((lambda (x) (+ x 1))
;            ((lambda (x) (+ x 1)) y)))
;         ((lambda (y)
;            ((lambda (x) (+ x 1))
;             ((lambda (x) (+ x 1)) y))) z)))
;      ((lambda (z)
;         ((lambda (y)
;            ((lambda (x) (+ x 1))
;             ((lambda (x) (+ x 1)) y)))
;          ((lambda (y)
;             ((lambda (x) (+ x 1))
;              ((lambda (x) (+ x 1)) y))) z))) x))) 5))

; (((lambda (f)
;     (lambda (x)
;       (f (f x))))
;   (lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z))))
;  ((lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z)))
;   ((lambda (z)
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y)))
;       ((lambda (y)
;          ((lambda (x) (+ x 1))
;           ((lambda (x) (+ x 1)) y))) z))) 5)))

; (((lambda (f)
;     (lambda (x)
;       (f (f x))))
;   (lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z))))
;  ((lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z)))
;   ((lambda (y)
;      ((lambda (x) (+ x 1))
;       ((lambda (x) (+ x 1)) y)))
;    ((lambda (y)
;       ((lambda (x) (+ x 1))
;        ((lambda (x) (+ x 1)) y))) 5))))

; (((lambda (f)
;     (lambda (x)
;       (f (f x))))
;   (lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z))))
;  ((lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z)))
;   ((lambda (y)
;      ((lambda (x) (+ x 1))
;       ((lambda (x) (+ x 1)) y)))
;    ((lambda (x) (+ x 1))
;     ((lambda (x) (+ x 1)) 5)))))

; (((lambda (f)
;     (lambda (x)
;       (f (f x))))
;   (lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z))))
;  ((lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z)))
;   ((lambda (y)
;      ((lambda (x) (+ x 1))
;       ((lambda (x) (+ x 1)) y)))
;    ((lambda (x) (+ x 1)) 6))))

; (((lambda (f)
;     (lambda (x)
;       (f (f x))))
;   (lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z))))
;  ((lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z)))
;   ((lambda (y)
;      ((lambda (x) (+ x 1))
;       ((lambda (x) (+ x 1)) y))) 7)))

; (((lambda (f)
;     (lambda (x)
;       (f (f x))))
;   (lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z))))
;  ((lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z)))
;   ((lambda (x) (+ x 1))
;    ((lambda (x) (+ x 1)) 7))))

; (((lambda (f)
;     (lambda (x)
;       (f (f x))))
;   (lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z))))
;  ((lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z)))
;   ((lambda (x) (+ x 1)) 8)))

; (((lambda (f)
;     (lambda (x)
;       (f (f x))))
;   (lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z))))
;  ((lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z))) 9))

; (((lambda (f)
;     (lambda (x)
;       (f (f x))))
;   (lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z))))
;  ((lambda (y)
;     ((lambda (x) (+ x 1))
;      ((lambda (x) (+ x 1)) y)))
;   ((lambda (y)
;      ((lambda (x) (+ x 1))
;       ((lambda (x) (+ x 1)) y))) 9)))

; (((lambda (f)
;     (lambda (x)
;       (f (f x))))
;   (lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z))))
;  ((lambda (y)
;     ((lambda (x) (+ x 1))
;      ((lambda (x) (+ x 1)) y)))
;   ((lambda (x) (+ x 1))
;    ((lambda (x) (+ x 1)) 9))))

; (((lambda (f)
;     (lambda (x)
;       (f (f x))))
;   (lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z))))
;  ((lambda (y)
;     ((lambda (x) (+ x 1))
;      ((lambda (x) (+ x 1)) y)))
;   ((lambda (x) (+ x 1)) 10)))

; (((lambda (f)
;     (lambda (x)
;       (f (f x))))
;   (lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z))))
;  ((lambda (y)
;     ((lambda (x) (+ x 1))
;      ((lambda (x) (+ x 1)) y))) 11))

; (((lambda (f)
;     (lambda (x)
;       (f (f x))))
;   (lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z))))
;  ((lambda (y)
;     ((lambda (x) (+ x 1))
;      ((lambda (x) (+ x 1)) y))) 11))

; (((lambda (f)
;     (lambda (x)
;       (f (f x))))
;   (lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z))))
;  ((lambda (x) (+ x 1))
;   ((lambda (x) (+ x 1)) 11)))

; (((lambda (f)
;     (lambda (x)
;       (f (f x))))
;   (lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z))))
;  ((lambda (x) (+ x 1)) 12))

; (((lambda (f)
;     (lambda (x)
;       (f (f x))))
;   (lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z)))) 13)

; ((lambda (x)
;    ((lambda (z)
;       ((lambda (y)
;          ((lambda (x) (+ x 1))
;           ((lambda (x) (+ x 1)) y)))
;        ((lambda (y)
;           ((lambda (x) (+ x 1))
;            ((lambda (x) (+ x 1)) y))) z)))
;     ((lambda (z)
;        ((lambda (y)
;           ((lambda (x) (+ x 1))
;            ((lambda (x) (+ x 1)) y)))
;         ((lambda (y)
;            ((lambda (x) (+ x 1))
;             ((lambda (x) (+ x 1)) y))) z))) x))) 13)

; ((lambda (z)
;    ((lambda (y)
;       ((lambda (x) (+ x 1))
;        ((lambda (x) (+ x 1)) y)))
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y))) z)))
;  ((lambda (z)
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y)))
;      ((lambda (y)
;         ((lambda (x) (+ x 1))
;          ((lambda (x) (+ x 1)) y))) z))) 13))

; ((lambda (z)
;    ((lambda (y)
;       ((lambda (x) (+ x 1))
;        ((lambda (x) (+ x 1)) y)))
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y))) z)))
;  ((lambda (y)
;     ((lambda (x) (+ x 1))
;      ((lambda (x) (+ x 1)) y)))
;   ((lambda (y)
;      ((lambda (x) (+ x 1))
;       ((lambda (x) (+ x 1)) y))) 13)))

; ((lambda (z)
;    ((lambda (y)
;       ((lambda (x) (+ x 1))
;        ((lambda (x) (+ x 1)) y)))
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y))) z)))
;  ((lambda (y)
;     ((lambda (x) (+ x 1))
;      ((lambda (x) (+ x 1)) y)))
;   ((lambda (x) (+ x 1))
;    ((lambda (x) (+ x 1)) 13))))

; ((lambda (z)
;    ((lambda (y)
;       ((lambda (x) (+ x 1))
;        ((lambda (x) (+ x 1)) y)))
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y))) z)))
;  ((lambda (y)
;     ((lambda (x) (+ x 1))
;      ((lambda (x) (+ x 1)) y)))
;   ((lambda (x) (+ x 1)) 14)))

; ((lambda (z)
;    ((lambda (y)
;       ((lambda (x) (+ x 1))
;        ((lambda (x) (+ x 1)) y)))
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y))) z)))
;  ((lambda (y)
;     ((lambda (x) (+ x 1))
;      ((lambda (x) (+ x 1)) y))) 15))

; ((lambda (z)
;    ((lambda (y)
;       ((lambda (x) (+ x 1))
;        ((lambda (x) (+ x 1)) y)))
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y))) z)))
;  ((lambda (x) (+ x 1))
;   ((lambda (x) (+ x 1)) 15)))

; ((lambda (z)
;    ((lambda (y)
;       ((lambda (x) (+ x 1))
;        ((lambda (x) (+ x 1)) y)))
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y))) z)))
;  ((lambda (x) (+ x 1)) 16))

; ((lambda (z)
;    ((lambda (y)
;       ((lambda (x) (+ x 1))
;        ((lambda (x) (+ x 1)) y)))
;     ((lambda (y)
;        ((lambda (x) (+ x 1))
;         ((lambda (x) (+ x 1)) y))) z))) 17)

; ((lambda (y)
;    ((lambda (x) (+ x 1))
;     ((lambda (x) (+ x 1)) y)))
;  ((lambda (y)
;     ((lambda (x) (+ x 1))
;      ((lambda (x) (+ x 1)) y))) 17))

; ((lambda (y)
;    ((lambda (x) (+ x 1))
;     ((lambda (x) (+ x 1)) y)))
;  ((lambda (x) (+ x 1))
;   ((lambda (x) (+ x 1)) 17)))

; ((lambda (y)
;    ((lambda (x) (+ x 1))
;     ((lambda (x) (+ x 1)) y)))
;  ((lambda (x) (+ x 1)) 18))

; ((lambda (y)
;    ((lambda (x) (+ x 1))
;     ((lambda (x) (+ x 1)) y))) 19)

; ((lambda (x) (+ x 1))
;  ((lambda (x) (+ x 1)) 19))

; ((lambda (x) (+ x 1)) 20)

; 21